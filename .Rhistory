devtools::load_all(".")
cor_test2 <- df %>%
filter(x%in%c("A","E","I","O","U","Y")) %>%
pull(y) %||%
df %>%
filter(x%in%c("A","E","I","O","U","Y")) %>%
mutate(z=as.numeric(as.factor(z))) %>%
pull(z) %>>>%
cor()
devtools::load_all(".")
cor_test2 <- df %>%
filter(x%in%c("A","E","I","O","U","Y")) %>%
pull(y) %||%
df %>%
filter(x%in%c("A","E","I","O","U","Y")) %>%
mutate(z=as.numeric(as.factor(z))) %>%
pull(z) %>>>%
cor()
cor_test3 <- df %>%
filter(x%in%c("A","E","I","O","U","Y")) %>%
pull(y) %||%
df %>%
filter(x%in%c("A","E","I","O","U","Y")) %>%
mutate(z=as.numeric(as.factor(z))) %>%
pull(z) %>>>%
cor
cor_test3
testthat::expect_equivalent(cor_test2,cor_result)
testthat::expect_equivalent(cor_test3,cor_result)
left_join_test <- df %>%
mutate(vowel=LETTERS%in%c("A","E","I","O","U","Y")) %>%
filter(y>.5) %>%
left_join(tmpvar1,by="x") %>%
filter(!is.na(w))
left_join_test2 <- df %>%
mutate(vowel=LETTERS%in%c("A","E","I","O","U","Y")) %>%
filter(y>.5) %||%
df2 %>%
filter(w==1) %>>>%
left_join(by="x") %>%
filter(!is.na(w))
left_join_test2
devtools::load_all(".")
devtools::test_coverage()
devtools::load_all(".")
devtools::test_coverage()
devtools::load_all(".")
usethis::use_readme_md()
usethis::use_lifecycle_badge("experimental")
usethis::use_travis()
usethis::use_github()
usethis::use_travis()
usethis::use_travis()
usethis::use_travis()
devtools::load_all(".")
devtools::document()
devtools::load_all(".")
devtools::document()
usethis::use_appveyor()
usethis::use_coverage()
usethis::use_mit_license()
usethis::use_mit_license("Ellis Hughes")
devtools::load_all(".")
magrittr:::split_chain()
magrittr:::split_chain
magrittr:::is_pipe()
magrittr:::is_pipe
magrittr:::is_parenthesized
magrittr:::is_dollar
magrittr:::is_funexpr
magrittr:::is_function
magrittr:::prepare_function
magrittr:::is_first
magrittr:::prepare_first
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
usethis::use_appveyor()
devtools::test_coverage()
devtools::test_coverage()
devtools::test_coverage()
devtools::test_coverage()
devtools::document()
devtools::test_coverage()
devtools::load_all(".")
`%//%` <- function (lhs, rhs) {
parent <- parent.frame()
env <- new.env(parent = parent)
chain_parts <- match.call()
tmp_lhs<-chain_parts$lhs
tmp_rhs<-chain_parts$rhs
assigndelayedeval(eval(chain_parts$lhs,parent,parent))
print("bump")
if(is_function(tmp_rhs)){
tmp_rhs<-as.call(c(quote(`%>%`),tmp_lhs,tmp_rhs))
}
return(eval(tmp_rhs,parent,parent))
# return(chain_parts)
}
set.seed(42)
cleardelayedeval()
df<-data.frame(x=LETTERS,
y=runif(26),
z=sample(letters,26,replace = TRUE),
stringsAsFactors = FALSE)
df2<-data.frame(x=LETTERS[1:10],
y=runif(20),
z=sample(letters,10,replace = TRUE),
stringsAsFactors = FALSE)
df %>%
mutate(vowel=LETTERS%in%c("A","E","I","O","U","Y")) %>%
filter(y>.5) %//%
filter(y>.75) %//%
df2
library(tidyverse)
set.seed(42)
cleardelayedeval()
df<-data.frame(x=LETTERS,
y=runif(26),
z=sample(letters,26,replace = TRUE),
stringsAsFactors = FALSE)
df2<-data.frame(x=LETTERS[1:10],
y=runif(20),
z=sample(letters,10,replace = TRUE),
stringsAsFactors = FALSE)
df %>%
mutate(vowel=LETTERS%in%c("A","E","I","O","U","Y")) %>%
filter(y>.5) %//%
filter(y>.75) %//%
df2
getdelayedeval()
set.seed(42)
cleardelayedeval()
df<-data.frame(x=LETTERS,
y=runif(26),
z=sample(letters,26,replace = TRUE),
stringsAsFactors = FALSE)
df2<-data.frame(x=LETTERS[1:10],
y=runif(20),
z=sample(letters,10,replace = TRUE),
stringsAsFactors = FALSE)
df %>%
mutate(vowel=LETTERS%in%c("A","E","I","O","U","Y")) %>%
filter(y>.5) %//%
filter(y>.75) %//%
df2
devtools::load_all(".")
rm(`%//%`)
set.seed(42)
cleardelayedeval()
df<-data.frame(x=LETTERS,
y=runif(26),
z=sample(letters,26,replace = TRUE),
stringsAsFactors = FALSE)
df2<-data.frame(x=LETTERS[1:10],
y=runif(20),
z=sample(letters,10,replace = TRUE),
stringsAsFactors = FALSE)
df %>%
mutate(vowel=LETTERS%in%c("A","E","I","O","U","Y")) %>%
filter(y>.5) %//%
filter(y>.75) %//%
df2
devtools::load_all(".")
set.seed(42)
cleardelayedeval()
df<-data.frame(x=LETTERS,
y=runif(26),
z=sample(letters,26,replace = TRUE),
stringsAsFactors = FALSE)
df2<-data.frame(x=LETTERS[1:10],
y=runif(20),
z=sample(letters,10,replace = TRUE),
stringsAsFactors = FALSE)
df %>%
mutate(vowel=LETTERS%in%c("A","E","I","O","U","Y")) %>%
filter(y>.5) %//%
filter(y>.75) %//%
df2
getdelayedeval()
set.seed(42)
cleardelayedeval()
df<-data.frame(x=LETTERS,
y=runif(26),
z=sample(letters,26,replace = TRUE),
stringsAsFactors = FALSE)
df2<-data.frame(x=LETTERS[1:10],
y=runif(20),
z=sample(letters,10,replace = TRUE),
stringsAsFactors = FALSE)
df %>%
mutate(vowel=LETTERS%in%c("A","E","I","O","U","Y")) %>%
filter(y>.5) %//%
filter(y>.75) %//%
df2
output<-getdelayedeval()
eval(output)
eval(output[[1]])
magritrr::`%>%`
magritr::`%>%`
magrittr::`%>%`
outpout
output
lapply(output,eval)
devtools::load_all(".")
set.seed(42)
cleardelayedeval()
df<-data.frame(x=LETTERS,
y=runif(26),
z=sample(letters,26,replace = TRUE),
stringsAsFactors = FALSE)
df2<-data.frame(x=LETTERS[1:10],
y=runif(20),
z=sample(letters,10,replace = TRUE),
stringsAsFactors = FALSE)
output<-df %>%
mutate(vowel=LETTERS%in%c("A","E","I","O","U","Y")) %>%
filter(y>.5) %//%
filter(y>.75) %//%
df2
devtools::load_all(".")
set.seed(42)
cleardelayedeval()
df<-data.frame(x=LETTERS,
y=runif(26),
z=sample(letters,26,replace = TRUE),
stringsAsFactors = FALSE)
df2<-data.frame(x=LETTERS[1:10],
y=runif(20),
z=sample(letters,10,replace = TRUE),
stringsAsFactors = FALSE)
output<-df %>%
mutate(vowel=LETTERS%in%c("A","E","I","O","U","Y")) %>%
filter(y>.5) %//%
filter(y>.75) %//%
df2
devtools::load_all(".")
set.seed(42)
cleardelayedeval()
df<-data.frame(x=LETTERS,
y=runif(26),
z=sample(letters,26,replace = TRUE),
stringsAsFactors = FALSE)
df2<-data.frame(x=LETTERS[1:10],
y=runif(20),
z=sample(letters,10,replace = TRUE),
stringsAsFactors = FALSE)
output<-df %>%
mutate(vowel=LETTERS%in%c("A","E","I","O","U","Y")) %>%
filter(y>.5) %//%
filter(y>.75) %//%
df2
output
output$lhs
as.list(output$lhs)
devtools::load_all(".")
set.seed(42)
cleardelayedeval()
df<-data.frame(x=LETTERS,
y=runif(26),
z=sample(letters,26,replace = TRUE),
stringsAsFactors = FALSE)
df2<-data.frame(x=LETTERS[1:10],
y=runif(20),
z=sample(letters,10,replace = TRUE),
stringsAsFactors = FALSE)
df %>%
mutate(vowel=LETTERS%in%c("A","E","I","O","U","Y")) %>%
filter(y>.5) %//%
filter(y>.75) %//%
df2
output<-getdelayedeval()
output
output[[2]]
output[[2]][[1]]
quote(output[[2]][[1]])
as.character(output[[2]][[1]]))
as.character(output[[2]][[1]])
is.symbol(output[[2]])
devtools::load_all(".")
devtools::load_all(".")
set.seed(42)
cleardelayedeval()
df<-data.frame(x=LETTERS,
y=runif(26),
z=sample(letters,26,replace = TRUE),
stringsAsFactors = FALSE)
df2<-data.frame(x=LETTERS[1:10],
y=runif(20),
z=sample(letters,10,replace = TRUE),
stringsAsFactors = FALSE)
df %>%
mutate(vowel=LETTERS%in%c("A","E","I","O","U","Y")) %>%
filter(y>.5) %//%
filter(y>.75) %//%
df2
output<-getdelayedeval()
output
devtools::load_all(".")
set.seed(42)
cleardelayedeval()
df<-data.frame(x=LETTERS,
y=runif(26),
z=sample(letters,26,replace = TRUE),
stringsAsFactors = FALSE)
df2<-data.frame(x=LETTERS[1:10],
y=runif(20),
z=sample(letters,10,replace = TRUE),
stringsAsFactors = FALSE)
df %>%
mutate(vowel=LETTERS%in%c("A","E","I","O","U","Y")) %>%
filter(y>.5) %//%
filter(y>.75) %//%
df2
output<-getdelayedeval()
output
as.character(output)
test<-as.character(output)
test_that("Pausing and play works with new", {
set.seed(42)
df<-data.frame(x=LETTERS,
y=runif(26),
z=sample(letters,26,replace = TRUE))
tmpvar2<-df %>%
filter(x%in%c("A","E","I","O","U","Y")) %>%
mutate(z=as.numeric(as.factor(z))) %>%
pull(z)
cor_result <- df %>%
filter(x%in%c("A","E","I","O","U","Y")) %>%
pull(y) %>%
cor(tmpvar2)
cor_test2 <- df %>%
filter(x%in%c("A","E","I","O","U","Y")) %>%
pull(y) %//%
df %>%
filter(x%in%c("A","E","I","O","U","Y")) %>%
mutate(z=as.numeric(as.factor(z))) %>%
pull(z) %>>>%
cor()
cor_test3 <- df %>%
filter(x%in%c("A","E","I","O","U","Y")) %>%
pull(y) %//%
df %>%
filter(x%in%c("A","E","I","O","U","Y")) %>%
mutate(z=as.numeric(as.factor(z))) %>%
pull(z) %>>>%
cor
testthat::expect_equivalent(cor_test2,cor_result)
testthat::expect_equivalent(cor_test3,cor_result)
})
test_that("Play works with more pipes", {
set.seed(42)
df<-data.frame(x=LETTERS,
y=runif(26),
z=sample(letters,26,replace = TRUE))
df2<-data.frame(x=LETTERS,
w=sample(c(1,2),size = 26,replace = TRUE))
tmpvar1<-df2 %>%
filter(w==1)
left_join_test <- df %>%
mutate(vowel=LETTERS%in%c("A","E","I","O","U","Y")) %>%
filter(y>.5) %>%
left_join(tmpvar1,by="x") %>%
filter(!is.na(w))
left_join_test2 <- df %>%
mutate(vowel=LETTERS%in%c("A","E","I","O","U","Y")) %>%
filter(y>.5) %//%
df2 %>%
filter(w==1) %>>>%
left_join(by="x") %>%
filter(!is.na(w))
testthat::expect_equivalent(left_join_test2,left_join_test)
})
test_that("test pausing writes the evaluation to the temp env", {
set.seed(42)
cleardelayedeval()
df<-data.frame(x=LETTERS,
y=runif(26),
z=sample(letters,26,replace = TRUE))
df2<-data.frame(x=LETTERS,
w=sample(c(1,2),size = 26,replace = TRUE))
df %>%
mutate(vowel=LETTERS%in%c("A","E","I","O","U","Y")) %>%
filter(y>.5) %//%
df2
testthat::expect_equal(
as.character(getdelayedeval()),
"df %>% mutate(vowel = LETTERS %in% c(\"A\", \"E\", \"I\", \"O\", \"U\", \"Y\")) %>% filter(y > 0.5)")
})
test_that("test pausing works with functions", {
set.seed(42)
cleardelayedeval()
df<-data.frame(x=LETTERS,
y=runif(26),
z=sample(letters,26,replace = TRUE))
actual_value <- df %>%
mutate(vowel=LETTERS%in%c("A","E","I","O","U","Y")) %>%
filter(y>.5) %>%
filter(y>.75)
pause_output <- df %>%
mutate(vowel=LETTERS%in%c("A","E","I","O","U","Y")) %>%
filter(y>.5) %//%
filter(y>.75)
testthat::expect_equal(
as.character(getdelayedeval()),
"df %>% mutate(vowel = LETTERS %in% c(\"A\", \"E\", \"I\", \"O\", \"U\", \"Y\")) %>% filter(y > 0.5)")
testthat::expect_equal(actual_value,pause_output)
})
test_that("test pausing works multiple times", {
set.seed(42)
cleardelayedeval()
df<-data.frame(x=LETTERS,
y=runif(26),
z=sample(letters,26,replace = TRUE),
stringsAsFactors = FALSE)
df2<-data.frame(x=LETTERS[1:10],
y=runif(20),
z=sample(letters,10,replace = TRUE),
stringsAsFactors = FALSE)
df %>%
mutate(vowel=LETTERS%in%c("A","E","I","O","U","Y")) %>%
filter(y>.5) %//%
filter(y>.75) %//%
df2
tempOutput<-list()
tempOutput[[1]]<-df %>% mutate(vowel = LETTERS %in% c(A, E, I, O, U, Y)) %>% filter(y > 0.5)
testthat::expect_equal(
as.character(getdelayedeval()),
c("df %>% mutate(vowel = LETTERS %in% c(\"A\", \"E\", \"I\", \"O\", \"U\", \"Y\")) %>% filter(y > 0.5)",
"df %>% mutate(vowel = LETTERS %in% c(\"A\", \"E\", \"I\", \"O\", \"U\", \"Y\")) %>% filter(y > 0.5) %>% filter(y > 0.75)"))
})
set.seed(42)
cleardelayedeval()
df<-data.frame(x=LETTERS,
y=runif(26),
z=sample(letters,26,replace = TRUE),
stringsAsFactors = FALSE)
df2<-data.frame(x=LETTERS[1:10],
y=runif(20),
z=sample(letters,10,replace = TRUE),
stringsAsFactors = FALSE)
df %>%
mutate(vowel=LETTERS%in%c("A","E","I","O","U","Y")) %>%
filter(y>.5) %//%
filter(y>.75) %//%
df2
testthat::expect_equal(
as.character(getdelayedeval()),
c("df %>% mutate(vowel = LETTERS %in% c(\"A\", \"E\", \"I\", \"O\", \"U\", \"Y\")) %>% filter(y > 0.5)",
"df %>% mutate(vowel = LETTERS %in% c(\"A\", \"E\", \"I\", \"O\", \"U\", \"Y\")) %>% filter(y > 0.5) %>% filter(y > 0.75)"))
test_that("test pausing works multiple times", {
set.seed(42)
cleardelayedeval()
df<-data.frame(x=LETTERS,
y=runif(26),
z=sample(letters,26,replace = TRUE),
stringsAsFactors = FALSE)
df2<-data.frame(x=LETTERS[1:10],
y=runif(20),
z=sample(letters,10,replace = TRUE),
stringsAsFactors = FALSE)
df %>%
mutate(vowel=LETTERS%in%c("A","E","I","O","U","Y")) %>%
filter(y>.5) %//%
filter(y>.75) %//%
df2
testthat::expect_equal(
as.character(getdelayedeval()),
c("df %>% mutate(vowel = LETTERS %in% c(\"A\", \"E\", \"I\", \"O\", \"U\", \"Y\")) %>% filter(y > 0.5)",
"df %>% mutate(vowel = LETTERS %in% c(\"A\", \"E\", \"I\", \"O\", \"U\", \"Y\")) %>% filter(y > 0.5) %>% filter(y > 0.75)"))
})
test_that("Play works with multiple pauses pausing works multiple times", {
set.seed(42)
cleardelayedeval()
df<-data.frame(x=LETTERS,
y=runif(26),
z=sample(letters,26,replace = TRUE),
stringsAsFactors = FALSE)
df2<-data.frame(x=LETTERS[1:10],
y=runif(20),
z=sample(letters,10,replace = TRUE),
stringsAsFactors = FALSE)
temp1 <- df %>%
mutate(vowel = LETTERS %in% c("A", "E", "I", "O", "U", "Y")) %>%
filter(y > .5)
temp2 <- temp1 %>%
filter(y > .75)
temp3 <- df2 %>%
filter(y>.5)
testOutput<-bind_rows(temp1,temp2,temp3)
output<-df %>%
mutate(vowel=LETTERS%in%c("A","E","I","O","U","Y")) %>%
filter(y>.5) %//%
filter(y>.75) %//%
df2 %>%
filter(y>.5) %>>>%
bind_rows()
testthat::expect_equal(output,testOutput)
})
devtools::test_coverage()
devtools::load_all(".")
devtools::test_coverage()
usethis::use_code_of_conduct()
usethis::use_tidy_contributing()
usethis::use_tidy_issue_template()
usethis::use_tidy_ci()
usethis::use_tidy_ci()
devtools::document()
devtools::document()
devtools::check_rhub()
